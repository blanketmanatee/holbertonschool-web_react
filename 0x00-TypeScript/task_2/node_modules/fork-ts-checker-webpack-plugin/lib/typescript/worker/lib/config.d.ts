import type * as ts from 'typescript';
import type { FilesChange } from '../../../files-change';
import type { Issue } from '../../../issue';
import type { TypeScriptConfigOverwrite } from '../../type-script-config-overwrite';
export declare function parseConfig(configFileName: string, configFileContext: string, configOverwriteJSON?: TypeScriptConfigOverwrite): ts.ParsedCommandLine;
export declare function getParseConfigIssues(): Issue[];
export declare function getParsedConfig(force?: boolean): ts.ParsedCommandLine;
export declare function parseNextConfig(): readonly [ts.ParsedCommandLine | undefined, ts.ParsedCommandLine];
export declare function invalidateConfig(): void;
export declare function getConfigFilePathFromCompilerOptions(compilerOptions: ts.CompilerOptions): string;
export declare function getConfigFilePathFromProgram(program: ts.Program): string;
export declare function getConfigFilePathFromBuilderProgram(builderProgram: ts.BuilderProgram): string;
export declare function didConfigFileChanged({ changedFiles, deletedFiles }: FilesChange): boolean;
export declare function didRootFilesChanged(): boolean | undefined;
